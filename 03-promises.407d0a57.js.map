{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAI,CAAEH,WAAUC,UAEhBG,EAAI,CAAEJ,WAAUC,S,GAEjBA,E,IAIMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEC,iBASF,IARA,IAAMZ,EAAQa,KAAKC,SAASd,MACtBe,EAAOF,KAAKC,SAASC,KACrBC,EAASH,KAAKC,SAASE,OACvBC,EAAaC,OAAOlB,EAAMmB,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAC5BG,EAAW,GAERC,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EAAE,CACvC,IAAMC,EAAeP,EAAaM,EAAIH,EAC1CE,EAASG,KAAK3B,EAAcyB,EAAGC,G,CAG7BF,EAASI,SAAQ,SAACC,GAChBA,EAAQC,MAAK,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAU+B,EAAUD,EAAVC,WACxBlC,EAAAmC,OAAOC,QAAQ,uBAAwCC,OAAflC,EAAS,QAAiBkC,OAAXH,EAAW,M,IAC/DI,OAAI,SAAAL,G,IAAG9B,EAAQ8B,EAAR9B,SAAU+B,EAAUD,EAAVC,WACjBlC,EAAAmC,OAAOI,QAAQ,sBAAqCF,OAAflC,EAAS,QAAiBkC,OAAXH,EAAW,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const delay = this.elements.delay;\n  const step = this.elements.step;\n  const amount = this.elements.amount;\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n  const promises = [];\n\n  for (let i = 1; i <= amountValue; i += 1){\n    const currentDelay = delayValue + i * stepValue;\npromises.push(createPromise(i, currentDelay))\n  }\n\n  promises.forEach((promise) => {\n    promise.then(({ position, delayValue }) =>\n    { Notify.success(`✅ Fulfilled promise ${position} in ${delayValue}ms`); })\n      .catch(({ position, delayValue }) => {\n         Notify.failure(`❌ Rejected promise ${position} in ${delayValue}ms`);\n      });\n      });\n};"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","this","elements","step","amount","delayValue1","Number","value","stepValue","amountValue","promises","i","currentDelay","push","forEach","promise","then","param","delayValue","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.407d0a57.js.map"}